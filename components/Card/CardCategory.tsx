import { AIcon } from "@components/AIcon";
import * as React from "react";
import { useCardContext } from "./CardContext";

export interface ICardCategoryProps {}

export const CardCategory: React.FC<ICardCategoryProps> = (props) => {
  const { category } = useCardContext();
  if (!category) return null;

  return (
    <div>
      {category === "financeDeal" && <AIcon className=" fill-secondary" />}
      {category === "privateEquityDeal" && <AIcon className="fill-primary " />}
      {category === "event" && <AIcon className="fill-primary " />}
      {category === "person" && <AIcon className="fill-secondary-dark " />}
    </div>
  );
};

const CategoryA: React.FC<{ className?: string }> = ({ className }) => (
  <svg
    viewBox="0 0 30 30"
    xmlns="http://www.w3.org/2000/svg"
    className={`w-10` + className}
  >
    <path d="M24.7346 17.771C26.0074 20.6647 26.7477 21.9456 27.995 22.4845C29.2679 20.2793 30 17.7222 30 14.9926C30 7.43874 24.4211 1.19095 17.1611 0.142416L24.7346 17.771Z" />
    <path d="M18.4381 13.572L14.5909 4.6486L10.7438 13.572H18.4381Z" />
    <path d="M17.3888 24.0707V22.8454C21.5869 22.8454 21.9948 21.8538 20.5378 18.4128L19.3711 15.7297H9.81074L8.64414 18.4128C7.18708 21.8538 7.18708 22.8454 11.793 22.8454V24.0707H3.05762C5.79743 27.673 10.1264 30 15 30C19.8735 30 24.2025 27.6729 26.9423 24.0707H17.3888H17.3888Z" />
    <path d="M6.77937 17.771L14.414 0C6.40175 0.308392 0 6.90084 0 14.9926C0 17.8462 0.796343 20.5135 2.17826 22.7848C4.51316 22.5496 5.14371 21.4895 6.77937 17.771Z" />
  </svg>
);

const RechtsAbschluss = () => (
  <svg
    viewBox="0 0 50 50"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className=" w-10"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M25 50C38.8071 50 50 38.8071 50 25C50 11.1929 38.8071 0 25 0C11.1929 0 0 11.1929 0 25C0 38.8071 11.1929 50 25 50ZM30.3129 29.7413C30.7904 30.128 31.1878 30.5592 31.505 31.035C32.0417 31.805 32.31 32.75 32.31 33.87C32.31 35.0367 32.03 36.075 31.47 36.985C30.91 37.9183 30.035 38.6533 28.845 39.19C27.6783 39.75 26.1617 40.03 24.295 40.03C23.1517 40.03 22.055 39.89 21.005 39.61C19.9783 39.33 19.0333 38.945 18.17 38.455C17.33 37.965 16.6183 37.4167 16.035 36.81L18.835 33.485C19.8383 34.325 20.8067 34.9317 21.74 35.305C22.6733 35.6783 23.5133 35.865 24.26 35.865C25.1233 35.865 25.7883 35.7133 26.255 35.41C26.7217 35.1067 26.955 34.675 26.955 34.115C26.955 33.7417 26.8033 33.4267 26.5 33.17C26.22 32.89 25.8467 32.645 25.38 32.435C24.9367 32.2017 24.435 31.98 23.875 31.77L20.9 30.685C19.2667 30.0783 18.0417 29.3083 17.225 28.375C16.4083 27.4417 16 26.3217 16 25.015C16 24.0583 16.2567 23.195 16.77 22.425C17.2833 21.6317 18.0183 20.99 18.975 20.5C19.1313 20.4218 19.2927 20.349 19.4591 20.2816C19.4494 20.2727 19.4397 20.2639 19.43 20.255C18.8933 19.7183 18.45 19.1 18.1 18.4C17.7733 17.6767 17.61 16.8483 17.61 15.915C17.61 15.1217 17.7617 14.3633 18.065 13.64C18.3917 12.9167 18.87 12.2867 19.5 11.75C20.1533 11.19 20.9817 10.7583 21.985 10.455C23.0117 10.1517 24.2133 10 25.59 10C26.71 10 27.7483 10.1283 28.705 10.385C29.685 10.6183 30.5483 10.9683 31.295 11.435C32.065 11.9017 32.73 12.4617 33.29 13.115L30.385 16.265C29.7783 15.7283 29.195 15.32 28.635 15.04C28.075 14.7367 27.5383 14.5267 27.025 14.41C26.5117 14.27 26.0217 14.2 25.555 14.2C24.7383 14.2 24.0967 14.3633 23.63 14.69C23.1867 15.0167 22.965 15.4367 22.965 15.95C22.965 16.3233 23.0817 16.6617 23.315 16.965C23.5717 17.245 23.91 17.49 24.33 17.7C24.75 17.91 25.2283 18.12 25.765 18.33L28.74 19.45C30.4433 20.08 31.7033 20.8617 32.52 21.795C33.36 22.705 33.7683 23.8133 33.745 25.12C33.6983 26.1467 33.395 27.045 32.835 27.815C32.2983 28.585 31.54 29.1917 30.56 29.635C30.4791 29.6716 30.3967 29.707 30.3129 29.7413ZM26.195 27.5523C26.5827 27.4796 26.9177 27.3805 27.2 27.255C27.62 27.045 27.9233 26.8 28.11 26.52C28.32 26.2167 28.425 25.89 28.425 25.54C28.425 25.12 28.2617 24.77 27.935 24.49C27.6317 24.21 27.13 23.93 26.43 23.65L23.501 22.6507C23.1431 22.7164 22.8245 22.8278 22.545 22.985C22.195 23.1717 21.9267 23.405 21.74 23.685C21.5533 23.9417 21.46 24.2567 21.46 24.63C21.46 25.0733 21.635 25.4583 21.985 25.785C22.335 26.0883 22.895 26.38 23.665 26.66L26.15 27.535C26.165 27.5408 26.18 27.5466 26.195 27.5523Z"
      fill="#007267"
    />
  </svg>
);

const Event = () => (
  <svg
    className=" w-10"
    viewBox="0 0 50 50"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M25 50C38.8071 50 50 38.8071 50 25C50 11.1929 38.8071 0 25 0C11.1929 0 0 11.1929 0 25C0 38.8071 11.1929 50 25 50ZM28.5623 34.3642L26.7332 31.2467L26.7322 31.2457C32.7986 27.3122 35.999 23.0879 35.999 18.9997C35.999 12.0463 31.3724 7 24.9995 7C18.6267 7 14 12.0463 14 18.9997C14 23.0879 17.2004 27.3132 23.2678 31.2467L21.4387 34.3642C21.3029 34.5958 21.299 34.8846 21.4291 35.1201C21.5592 35.3557 21.803 35.5006 22.067 35.5006H24.2671V39.2508C24.2671 40.4917 25.2539 41.5009 26.4672 41.5009C27.6805 41.5009 28.6674 40.4917 28.6674 39.2508C28.6674 38.8368 28.996 38.5007 29.4006 38.5007C29.8054 38.5007 30.134 38.8368 30.134 39.2508V42.2509C30.134 42.6649 30.4617 43.001 30.8674 43.001C31.2731 43.001 31.6008 42.6649 31.6008 42.2509V39.2508C31.6008 38.0099 30.614 37.0007 29.4006 37.0007C28.1874 37.0007 27.2006 38.0109 27.2006 39.2508C27.2006 39.6647 26.8719 40.0008 26.4672 40.0008C26.0625 40.0008 25.7339 39.6647 25.7339 39.2508V35.5006H27.934C28.198 35.5006 28.4418 35.3547 28.5719 35.1201C28.702 34.8836 28.6981 34.5958 28.5623 34.3642Z"
      fill="#BF664A"
    />
  </svg>
);

const Person = () => (
  <svg
    className=" w-10"
    viewBox="0 0 50 50"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M25 50C38.8071 50 50 38.8071 50 25C50 11.1929 38.8071 0 25 0C11.1929 0 0 11.1929 0 25C0 38.8071 11.1929 50 25 50ZM13 38H36.9989V35.0249C36.9989 33.1866 35.8788 31.5352 34.2113 30.916L28.5993 28.8333V26.0256C29.4593 25.2759 30.171 24.2828 30.6658 23.1223C30.6723 23.1079 30.6781 23.0923 30.6838 23.0767C30.6891 23.0623 30.6944 23.0478 30.7005 23.034C30.7868 22.8266 30.8679 22.616 30.9395 22.3993C31.0047 22.2063 31.0595 22.0091 31.1132 21.8099C31.1167 21.7967 31.1202 21.7837 31.1237 21.7707C31.1338 21.7331 31.1438 21.6961 31.1532 21.6579C31.3395 20.9102 31.4395 19.9983 31.4395 19.034C31.4385 19.0343 31.4374 19.0348 31.4364 19.0352C31.4342 19.0361 31.4321 19.037 31.43 19.037C31.4206 18.5985 31.3848 18.1682 31.3227 17.7482C31.3237 17.7482 31.3248 17.7451 31.3248 17.7451C31.3242 17.7415 31.3232 17.7379 31.3221 17.7343C31.3211 17.7307 31.32 17.7271 31.3195 17.7236C30.7416 13.8971 28.0476 11 24.8052 11C21.1418 11 18.172 14.6971 18.171 19.2568C18.171 22.2669 19.4679 24.8918 21.3997 26.3347V28.8333L15.7866 30.916C14.1201 31.5352 13 33.1856 13 35.0249V38Z"
      fill="#007267"
    />
  </svg>
);
